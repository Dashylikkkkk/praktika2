package com.company;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.concurrent.TimeUnit;

public class password {
    public static void hash(int a, int b, String hex_pas_in) throws NoSuchAlgorithmException {
        char[] symb = new char[5];
        MessageDigest messageDigest = MessageDigest.getInstance("SHA-256");
        long start_time = System.currentTimeMillis();
        long end_time;
        for (int i = a; i < b; i++) {
            symb[0] = (char)i;
            for (int j = 97; j < 123; j++) {
                symb[1] = (char)j;
                for (int k = 97; k < 123; k++){
                    symb[2] = (char)k;
                    for (int l = 97; l < 123; l++){
                        symb[3] = (char)l;
                        for (int m = 97; m < 123; m++){
                            symb[4] = (char)m;
                            String p = new String(symb);
                            messageDigest.update(p.getBytes(StandardCharsets.UTF_8));
                            byte[] digest = messageDigest.digest();
                            String h = String.format("%064x", new BigInteger(1, digest));if (h.equals(hex_pas_in)){
                                end_time = System.currentTimeMillis();
                                System.out.println(p);
                                System.out.println(TimeUnit.MILLISECONDS.convert((end_time - start_time), TimeUnit.MILLISECONDS) + " milliseconds");
                                System.exit(0);
                            } else {
                                messageDigest.reset();
                            }
                        }
                    }
                }
            }
        }
    }
}
